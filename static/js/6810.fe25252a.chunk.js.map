{"version":3,"file":"static/js/6810.fe25252a.chunk.js","mappings":"qNAIIA,EAAU,WACZ,SAAAA,EAAYC,GAAS,IAAAC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAH,IACnBI,EAAAA,EAAAA,GAAiBC,KAAMJ,GACvBI,KAAKC,kBAAmBC,EAAAA,EAAAA,GAAYF,KAAM,mBAAoB,GAC9DA,KAAKG,aAAcD,EAAAA,EAAAA,GAAYF,KAAM,cAAe,GAIpDA,KAAKI,YAAc,aAInBJ,KAAKK,WAAa,OAClBL,KAAKM,kBAAoB,SAAAC,GACvB,GAAIA,EAAUC,OAAQ,CACpB,IAAMC,EAAWF,EAAUG,OAAOC,aAAa,SAC/Cd,EAAKe,MAAQH,EACbZ,EAAKM,YAAYU,KAAKJ,EACxB,CACF,CACF,CAsCI,OAtCHK,EAAAA,EAAAA,GAAAnB,EAAA,EAAAoB,IAAA,gBAAAC,IACD,WACE,OAAOC,MAAMC,KAAKlB,KAAKmB,GAAGC,iBAAiB,iBAC7C,GAAC,CAAAL,IAAA,eAAAH,MACD,SAAaH,GACXT,KAAKC,iBAAiBY,KAAKJ,EAC7B,GAAC,CAAAM,IAAA,mBAAAH,MACD,WAAmB,IAAAS,EAAA,KACjBrB,KAAKsB,cAAcC,SAAQ,SAAAC,GAAK,OAAIA,EAAMC,iBAAiB,mBAAoBJ,EAAKf,kBAAkB,GACxG,GAAC,CAAAS,IAAA,oBAAAH,MACD,WAAoB,IACdc,EADcC,EAAA,MAGgB,QAA7BD,EAAK1B,KAAKsB,qBAAkC,IAAPI,OAAgB,EAASA,EAAGE,SACpE5B,KAAKsB,cAAcC,SAAQ,SAAAC,GAAK,OAAIA,EAAMC,iBAAiB,mBAAoBE,EAAKrB,kBAAkB,GAE1G,GAAC,CAAAS,IAAA,uBAAAH,MACD,WAAuB,IAAAiB,EAAA,KACrB7B,KAAKsB,cAAcC,SAAQ,SAAAC,GAAK,OAAIA,EAAMM,oBAAoB,mBAAoBD,EAAKvB,kBAAkB,GAC3G,GAAC,CAAAS,IAAA,SAAAH,MACD,WACE,IAAMmB,EAAkB,CACtB,sBAAsB,EACtB,8BAA+B/B,KAAKgC,SACpC,+BAAgChC,KAAKiC,OAEvC,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAOL,EAAiBM,KAAM,eAAgBH,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,CAC9E,6BAAmD,eAArBpC,KAAKI,YACnC,sCAA4D,aAArBJ,KAAKI,YAC5C,oCAAyD,WAApBJ,KAAKK,WAC1C,mCAAwD,UAApBL,KAAKK,cACtC6B,EAAAA,EAAAA,GAAE,OAAQ,QAASlC,KAAKsC,mBAE/BJ,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,4BAA8BpC,KAAKiC,MAAQjC,KAAKiC,OAAQC,EAAAA,EAAAA,GAAE,OAAQ,KAAM,SAC5F,GAAC,CAAAnB,IAAA,KAAAC,IACD,WAAW,OAAOuB,EAAAA,EAAAA,GAAWvC,KAAO,IAAC,EAAAe,IAAA,WAAAC,IACrC,WAAwB,MAAO,CAC7B,MAAS,CAAC,gBACT,KAACrB,CAAA,CA1DQ,GA4DdA,EAAW6C,MA9DiB,4sB","sources":["../node_modules/@didomi/ui-atoms/dist/esm/didomi-radio-group.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-371c2d7e.js';\n\nconst didomiRadioGroupCss = \".didomi-radio-group{display:inline-block}.didomi-radio-group-options{display:flex;flex-wrap:wrap;gap:16px}.didomi-radio-group-options-vertical{display:flex;flex-direction:column;flex-wrap:wrap;gap:8px}.didomi-radio-group-options-vertical .didomi-radio-group-options-center{justify-content:initial;align-items:center}.didomi-radio-group-options-vertical .didomi-radio-group-options-right{justify-content:initial;align-items:flex-end}.didomi-radio-group-options-center{justify-content:center}.didomi-radio-group-options-right{justify-content:flex-end}.didomi-radio-group-error{color:#b10e00;margin-top:4px;font-family:\\\"IBM Plex Sans\\\", \\\"IBMPlexSans\\\";font-size:12px;letter-spacing:0px;line-height:18px;font-weight:400}\";\n\nlet RadioGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.radioGroupChange = createEvent(this, \"radioGroupChange\", 7);\n    this.valueChange = createEvent(this, \"valueChange\", 7);\n    /**\n     * The radio group orientation\n     */\n    this.orientation = 'horizontal';\n    /**\n     * The radio group alignment\n     */\n    this.alignItems = 'left';\n    this.updateRadioChange = newChange => {\n      if (newChange.detail) {\n        const newValue = newChange.target.getAttribute('value');\n        this.value = newValue;\n        this.valueChange.emit(newValue);\n      }\n    };\n  }\n  get radioElements() {\n    return Array.from(this.el.querySelectorAll('.didomi-radio'));\n  }\n  valueChanged(newValue) {\n    this.radioGroupChange.emit(newValue);\n  }\n  componentDidLoad() {\n    this.radioElements.forEach(radio => radio.addEventListener('radioValueChange', this.updateRadioChange));\n  }\n  connectedCallback() {\n    var _a;\n    // First run will skip and run the componentDidLoad version\n    if ((_a = this.radioElements) === null || _a === void 0 ? void 0 : _a.length) {\n      this.radioElements.forEach(radio => radio.addEventListener('radioValueChange', this.updateRadioChange));\n    }\n  }\n  disconnectedCallback() {\n    this.radioElements.forEach(radio => radio.removeEventListener('radioValueChange', this.updateRadioChange));\n  }\n  render() {\n    const classRadioGroup = {\n      'didomi-radio-group': true,\n      'didomi-radio-group-disabled': this.disabled,\n      'didomi-radio-group-invalid': !!this.error,\n    };\n    return (h(Host, { class: classRadioGroup, role: \"radiogroup\" }, h(\"div\", { class: {\n        'didomi-radio-group-options': this.orientation === 'horizontal',\n        'didomi-radio-group-options-vertical': this.orientation === 'vertical',\n        'didomi-radio-group-options-center': this.alignItems === 'center',\n        'didomi-radio-group-options-right': this.alignItems === 'right',\n      } }, h(\"slot\", null)), !this.hideErrorMessage && (\n    /* We need the `&nbsp;` (non-breaking space) symbol, to keep the same height when there is no error message. */\n    h(\"div\", { class: \"didomi-radio-group-error\" }, this.error ? this.error : h(\"span\", null, \"\\u00A0\")))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nRadioGroup.style = didomiRadioGroupCss;\n\nexport { RadioGroup as didomi_radio_group };\n"],"names":["RadioGroup","hostRef","_this","_classCallCheck","registerInstance","this","radioGroupChange","createEvent","valueChange","orientation","alignItems","updateRadioChange","newChange","detail","newValue","target","getAttribute","value","emit","_createClass","key","get","Array","from","el","querySelectorAll","_this2","radioElements","forEach","radio","addEventListener","_a","_this3","length","_this4","removeEventListener","classRadioGroup","disabled","error","h","Host","class","role","hideErrorMessage","getElement","style"],"sourceRoot":""}