{"version":3,"file":"static/js/7567.08c9e03c.chunk.js","mappings":"uNAKMA,EAA4B,IAAIC,IAIhCC,EAAW,IAAID,IAsCfE,EAAkB,SAACC,GACvB,IAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,UAAYJ,EAEhB,IAAMK,EAASJ,EAAIK,kBACnB,OAAID,GAA4C,QAAlCA,EAAOE,SAASC,eACxBC,EAAQJ,GACHJ,EAAIG,UAGR,EACT,EAMMK,EAAU,SAAVA,EAAWC,GAEf,GAAqB,IAAjBA,EAAIC,SAAgB,CACtB,GAAmC,WAA/BD,EAAIH,SAASC,cACf,OAAO,EAET,IAAK,IAAII,EAAI,EAAGA,EAAIF,EAAIG,WAAWC,OAAQF,IAAK,CAC9C,IAAMG,EAAML,EAAIG,WAAWD,GAAGI,MAC9B,GAAmB,kBAARD,GAAwD,IAApCA,EAAIP,cAAcS,QAAQ,MACvD,OAAO,CAEX,CACA,IAAK,IAAIL,EAAI,EAAGA,EAAIF,EAAIQ,WAAWJ,OAAQF,IACzC,IAAKH,EAAQC,EAAIQ,WAAWN,IAC1B,OAAO,CAGb,CACA,OAAO,CACT,EAEMO,EAAoB,CACxB,CACEC,SAAU,UACVC,KAAM,KACNC,KAAM,kBAER,CACEF,SAAU,UACVC,KAAM,QACNC,KAAM,kBAER,CACEF,SAAU,UACVC,KAAM,QACNC,KAAM,kBAER,CACEF,SAAU,SACVC,KAAM,KACNC,KAAM,UAER,CACEF,SAAU,SACVC,KAAM,KACNC,KAAM,UAER,CACEF,SAAU,YACVC,KAAM,KACNC,KAAM,YAER,CACEF,SAAU,UACVC,KAAM,KACNC,KAAM,WAER,CACEF,SAAU,qBACVC,KAAM,QACNC,KAAM,SAER,CACEF,SAAU,sBACVC,KAAM,QACNC,KAAM,SAER,CACEF,SAAU,WACVC,KAAM,KACNC,KAAM,WAER,CACEF,SAAU,QACVC,KAAM,KACNC,KAAM,kBAER,CACEF,SAAU,SACVC,KAAM,KACNC,KAAM,WAER,CACEF,SAAU,QACVC,KAAM,KACNC,KAAM,eAER,CACEF,SAAU,WACVC,KAAM,KACNC,KAAM,YAER,CACEF,SAAU,UACVC,KAAM,KACNC,KAAM,WAER,CACEF,SAAU,SACVC,KAAM,KACNC,KAAM,WAER,CACEF,SAAU,QACVC,KAAM,KACNC,KAAM,UAER,CACEF,SAAU,YACVC,KAAM,KACNC,KAAM,WAER,CACEF,SAAU,WACVC,KAAM,KACNC,KAAM,SAER,CACEF,SAAU,UACVC,KAAM,KACNC,KAAM,SAER,CACEF,SAAU,SACVC,KAAM,KACNC,KAAM,eAER,CACEF,SAAU,UACVC,KAAM,KACNC,KAAM,UAER,CACEF,SAAU,aACVC,KAAM,KACNC,KAAM,aAER,CACEF,SAAU,QACVC,KAAM,KACNC,KAAM,SAER,CACEF,SAAU,SACVC,KAAM,KACNC,KAAM,UAER,CACEF,SAAU,aACVC,KAAM,KACNC,KAAM,YAER,CACEF,SAAU,WACVC,KAAM,KACNC,KAAM,WAER,CACEF,SAAU,UACVC,KAAM,KACNC,KAAM,UAER,CACEF,SAAU,UACVC,KAAM,KACNC,KAAM,UAER,CACEF,SAAU,SACVC,KAAM,KACNC,KAAM,YAER,CACEF,SAAU,YACVC,KAAM,KACNC,KAAM,YAER,CACEF,SAAU,UACVC,KAAM,KACNC,KAAM,SAER,CACEF,SAAU,UACVC,KAAM,KACNC,KAAM,UAER,CACEF,SAAU,OACVC,KAAM,KACNC,KAAM,YAER,CACEF,SAAU,UACVC,KAAM,KACNC,KAAM,UAER,CACEF,SAAU,YACVC,KAAM,KACNC,KAAM,WAER,CACEF,SAAU,aACVC,KAAM,KACNC,KAAM,WAER,CACEF,SAAU,YACVC,KAAM,KACNC,KAAM,UAER,CACEF,SAAU,YACVC,KAAM,QACNC,KAAM,UAER,CACEF,SAAU,cACVC,KAAM,KACNC,KAAM,cAER,CACEF,SAAU,UACVC,KAAM,KACNC,KAAM,cAER,CACEF,SAAU,WACVC,KAAM,MACNC,KAAM,YAER,CACEF,SAAU,SACVC,KAAM,KACNC,KAAM,UAER,CACEF,SAAU,QACVC,KAAM,KACNC,KAAM,SAER,CACEF,SAAU,aACVC,KAAM,KACNC,KAAM,aAER,CACEF,SAAU,aACVC,KAAM,KACNC,KAAM,aAER,CACEF,SAAU,UACVC,KAAM,KACNC,KAAM,UAGJC,EAAuB,IAAI1B,IAAIsB,EAAkB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","sources":["../node_modules/@didomi/ui-atoms/dist/esm/didomi-language-flag.entry.js"],"sourcesContent":["import { r as registerInstance, h, a as Host, g as getElement } from './index-371c2d7e.js';\n\n/**\n * A cache for the illustration content\n */\nconst didomiIllustrationContent = new Map();\n/**\n * A cache for network requests to fetch the illustrations\n */\nconst requests = new Map();\n/**\n * Gets the SVG content from a URL. Fetches the file, and saves it into a cache\n * If the SVG was already in the cache it returns it from there without fetching\n * @param url URL of the SVG to download\n * @return The SVG content\n */\nconst getSvgContent = (url) => {\n  // see if we already have a request for this url\n  let req = requests.get(url);\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      // we don't already have a request\n      req = fetch(url).then(rsp => {\n        if (rsp.ok) {\n          return rsp.text().then(svgContent => {\n            svgContent = validateContent(svgContent);\n            didomiIllustrationContent.set(url, svgContent || '');\n          });\n        }\n        didomiIllustrationContent.set(url, '');\n      });\n      // cache for the same requests\n      requests.set(url, req);\n    }\n    else {\n      // set to empty for ssr scenarios and resolve promise\n      didomiIllustrationContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n  return req;\n};\n/**\n * Validates that the SVG content is a valid SVG element\n * @param svgContent The SVG content\n * @return The SVG content\n */\nconst validateContent = (svgContent) => {\n  const div = document.createElement('div');\n  div.innerHTML = svgContent;\n  // must only have 1 root element\n  const svgElm = div.firstElementChild;\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n  return '';\n};\n/**\n * Ensures an HTML content is valid to avoid security attacks\n * @param elm The HTML content\n * @return True if valid, false if not\n */\nconst isValid = (elm) => {\n  /* istanbul ignore else */\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n    for (let i = 0; i < elm.attributes.length; i++) {\n      const val = elm.attributes[i].value;\n      if (typeof val === 'string' && val.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n    for (let i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nconst languagesAndFlags = [\n  {\n    longName: 'English',\n    code: 'en',\n    flag: 'United Kingdom',\n  },\n  {\n    longName: 'English',\n    code: 'en-UK',\n    flag: 'United Kingdom',\n  },\n  {\n    longName: 'English',\n    code: 'en-US',\n    flag: 'United Kingdom',\n  },\n  {\n    longName: 'French',\n    code: 'fr',\n    flag: 'France',\n  },\n  {\n    longName: 'Arabic',\n    code: 'ar',\n    flag: 'Arabic',\n  },\n  {\n    longName: 'Bulgarian',\n    code: 'bg',\n    flag: 'Bulgaria',\n  },\n  {\n    longName: 'Catalan',\n    code: 'ca',\n    flag: 'Catalan',\n  },\n  {\n    longName: 'Chinese Simplified',\n    code: 'zh-CN',\n    flag: 'China',\n  },\n  {\n    longName: 'Chinese Traditional',\n    code: 'zh-TW',\n    flag: 'China',\n  },\n  {\n    longName: 'Croatian',\n    code: 'hr',\n    flag: 'Croatia',\n  },\n  {\n    longName: 'Czech',\n    code: 'cs',\n    flag: 'Czech Republic',\n  },\n  {\n    longName: 'Danish',\n    code: 'da',\n    flag: 'Denmark',\n  },\n  {\n    longName: 'Dutch',\n    code: 'nl',\n    flag: 'Netherlands',\n  },\n  {\n    longName: 'Estonian',\n    code: 'et',\n    flag: 'Estonian',\n  },\n  {\n    longName: 'Finnish',\n    code: 'fi',\n    flag: 'Finland',\n  },\n  {\n    longName: 'German',\n    code: 'de',\n    flag: 'Germany',\n  },\n  {\n    longName: 'Greek',\n    code: 'el',\n    flag: 'Greece',\n  },\n  {\n    longName: 'Hungarian',\n    code: 'hu',\n    flag: 'Hungary',\n  },\n  {\n    longName: 'Japanese',\n    code: 'ja',\n    flag: 'Japan',\n  },\n  {\n    longName: 'Italian',\n    code: 'it',\n    flag: 'Italy',\n  },\n  {\n    longName: 'Korean',\n    code: 'ko',\n    flag: 'Korea South',\n  },\n  {\n    longName: 'Latvian',\n    code: 'lv',\n    flag: 'Latvia',\n  },\n  {\n    longName: 'Lithuanian',\n    code: 'lt',\n    flag: 'Lithuania',\n  },\n  {\n    longName: 'Malay',\n    code: 'ms',\n    flag: 'Malay',\n  },\n  {\n    longName: 'Polish',\n    code: 'pl',\n    flag: 'Poland',\n  },\n  {\n    longName: 'Portuguese',\n    code: 'pt',\n    flag: 'Portugal',\n  },\n  {\n    longName: 'Romanian',\n    code: 'ro',\n    flag: 'Romania',\n  },\n  {\n    longName: 'Russian',\n    code: 'ru',\n    flag: 'Russia',\n  },\n  {\n    longName: 'Serbian',\n    code: 'sr',\n    flag: 'Serbia',\n  },\n  {\n    longName: 'Slovak',\n    code: 'sk',\n    flag: 'Slovakia',\n  },\n  {\n    longName: 'Slovenian',\n    code: 'sl',\n    flag: 'Slovenia',\n  },\n  {\n    longName: 'Spanish',\n    code: 'es',\n    flag: 'Spain',\n  },\n  {\n    longName: 'Swedish',\n    code: 'sv',\n    flag: 'Sweden',\n  },\n  {\n    longName: 'Thai',\n    code: 'th',\n    flag: 'Thailand',\n  },\n  {\n    longName: 'Turkish',\n    code: 'tr',\n    flag: 'Turkey',\n  },\n  {\n    longName: 'Ukrainian',\n    code: 'uk',\n    flag: 'Ukraine',\n  },\n  {\n    longName: 'Vietnamese',\n    code: 'vi',\n    flag: 'Vietnam',\n  },\n  {\n    longName: 'Norwegian',\n    code: 'no',\n    flag: 'Norway',\n  },\n  {\n    longName: 'Brasilian',\n    code: 'pt-BR',\n    flag: 'Brazil',\n  },\n  {\n    longName: 'Azerbaijani',\n    code: 'az',\n    flag: 'Azerbaijan',\n  },\n  {\n    longName: 'Bengali',\n    code: 'bn',\n    flag: 'Bangladesh',\n  },\n  {\n    longName: 'Filipino',\n    code: 'fil',\n    flag: 'Filipino',\n  },\n  {\n    longName: 'Hebrew',\n    code: 'he',\n    flag: 'Hebrew',\n  },\n  {\n    longName: 'Hindi',\n    code: 'hi',\n    flag: 'India',\n  },\n  {\n    longName: 'Indonesian',\n    code: 'id',\n    flag: 'Indonesia',\n  },\n  {\n    longName: 'Macedonian',\n    code: 'mk',\n    flag: 'Macedonia',\n  },\n  {\n    longName: 'Swahili',\n    code: 'sw',\n    flag: 'Kenya',\n  },\n];\nconst languagesAndFlagsMap = new Map(languagesAndFlags.map(i => [i.code, i.flag]));\nconst languagesCodeAndNameMap = new Map(languagesAndFlags.map(i => [i.code, i.longName]));\n\nconst didomiLanguageFlagCss = \".didomi-language-flag{display:inline-flex;flex-direction:column;justify-content:center;align-items:center}.didomi-language-flag-inner{display:block;width:48px;height:48px;filter:drop-shadow(0px 5px 10px rgba(0, 0, 0, 0.08));border-radius:50%;overflow:hidden;border:1px solid #e2f1f8}.didomi-language-flag-inner svg{height:100%;width:100%;transform:scale(1.75)}.didomi-language-flag-name{margin-top:12px;color:#1d4153;font-style:normal;font-weight:600;font-size:12px;line-height:20px;text-align:center}.didomi-language-flag-inner-fallback{display:flex;width:48px;height:68px;align-items:center;justify-content:center;color:#2fabd5;font-style:normal;font-weight:600;font-size:12px;line-height:14px}\";\n\nlet DidomiLanguageFlag = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.isVisible = false;\n    /**\n     * Specifies if the illustration should display the name of the language below.\n     */\n    this.displayName = false;\n    /**\n     * If enabled, didomi-language-flag will be loaded lazily when it's visible in the viewport.\n     * Default, `false`.\n     */\n    this.lazy = false;\n  }\n  connectedCallback() {\n    // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n    this.waitUntilVisible(this.el, '30px', () => {\n      this.isVisible = true;\n      this.loadIllustration();\n    });\n  }\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  waitUntilVisible(el, rootMargin, cb) {\n    if (this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      const io = (this.io = new window.IntersectionObserver((data) => {\n        if (data[0].isIntersecting) {\n          io.disconnect();\n          this.io = undefined;\n          cb();\n        }\n      }, { rootMargin }));\n      io.observe(el);\n    }\n    else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  }\n  loadIllustration() {\n    if (this.isVisible && this.language) {\n      const url = `https://uilib.didomi.io/assets/languages-illustrations/${languagesAndFlagsMap.get(this.language)}.svg`; // https://uilib.didomi.io/assets will be replaced at build time check stencil.config.ts\n      getSvgContent(url).then(() => (this.svgContent = didomiIllustrationContent.get(url)));\n      if (!this.ariaLabel && this.ariaHidden !== 'true') {\n        const label = this.language;\n        // user did not provide a label\n        // come up with the label based on the illustration name\n        if (label) {\n          this.ariaLabel = label.replace(/\\-/g, ' ');\n        }\n      }\n    }\n  }\n  render() {\n    const languageName = languagesCodeAndNameMap.get(this.language);\n    return (h(Host, { name: this.language, class: \"didomi-language-flag\", role: \"img\" }, this.svgContent ? (h(\"div\", { class: \"didomi-language-flag-inner\", innerHTML: this.svgContent })) : (h(\"div\", { class: \"didomi-language-flag-inner-fallback\" }, this.fallbackName || this.language)), this.displayName && this.svgContent && h(\"div\", { class: \"didomi-language-flag-name\" }, languageName || this.fallbackName)));\n  }\n  static get assetsDirs() { return [\"languages-illustrations\"]; }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"language\": [\"loadIllustration\"]\n  }; }\n};\nDidomiLanguageFlag.style = didomiLanguageFlagCss;\n\nexport { DidomiLanguageFlag as didomi_language_flag };\n"],"names":["didomiIllustrationContent","Map","requests","validateContent","svgContent","div","document","createElement","innerHTML","svgElm","firstElementChild","nodeName","toLowerCase","isValid","elm","nodeType","i","attributes","length","val","value","indexOf","childNodes","languagesAndFlags","longName","code","flag","languagesAndFlagsMap","map","languagesCodeAndNameMap","DidomiLanguageFlag","hostRef","_classCallCheck","registerInstance","this","isVisible","displayName","lazy","_createClass","key","_this","waitUntilVisible","el","loadIllustration","io","disconnect","undefined","rootMargin","cb","_this2","window","IntersectionObserver","data","isIntersecting","observe","_this3","language","url","concat","get","req","fetch","set","Promise","resolve","then","rsp","ok","text","getSvgContent","ariaLabel","ariaHidden","label","replace","languageName","h","Host","name","class","role","fallbackName","getElement","style"],"sourceRoot":""}