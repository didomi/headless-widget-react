{"version":3,"file":"static/js/8910.4c9133f0.chunk.js","mappings":"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","sources":["../node_modules/@didomi/ui-atoms/dist/esm/didomi-dropdown.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-371c2d7e.js';\nimport { g as generateUniqueId, c as createComponentWithPrefix } from './utils-0574000f.js';\nimport { P as PopperOverlay } from './popperOverlay-5341d24d.js';\nimport { p as preventOverflow } from './preventOverflow-cbf2cbc5.js';\nimport { f as flip, o as offset } from './offset-21f9211d.js';\n\nconst didomiDropdownCss = \".didomi-dropdown .select-input{display:none}.didomi-dropdown.didomi-dropdown-disable .didomi-dropdown-wrapper .didomi-dropdown-list{display:none}.didomi-dropdown.didomi-dropdown-blue .didomi-dropdown-content{color:#265973}.didomi-dropdown.didomi-dropdown-blue .didomi-dropdown-content:hover:not(:disabled){color:#3186af}.didomi-dropdown.didomi-dropdown-blue .didomi-dropdown-content:disabled{color:#9ebdcb;cursor:not-allowed}.didomi-dropdown.didomi-dropdown-bordered .didomi-dropdown-content{background-color:#ffffff;border:1px solid #9ebdcb;border-radius:8px;color:#1d4153;padding:8px;padding-right:4px;font-family:\\\"IBM Plex Sans\\\", \\\"IBMPlexSans\\\";font-size:14px;font-weight:400;letter-spacing:0px;line-height:20px;min-width:52px}.didomi-dropdown.didomi-dropdown-bordered .didomi-dropdown-content[data-opened] .didomi-dropdown-icon{transform:scale(0.5) rotate(180deg)}.didomi-dropdown.didomi-dropdown-bordered .didomi-dropdown-content .didomi-dropdown-icon{transform:scale(0.5);margin-left:4px;transition-duration:300ms;transition-property:transform}.didomi-dropdown.didomi-dropdown-bordered .didomi-dropdown-content:hover:not(:disabled){color:#265973 !important;border-color:#265973 !important}.didomi-dropdown.didomi-dropdown-bordered .didomi-dropdown-content:disabled{border:1px solid #9ebdcb;color:#9ebdcb;cursor:not-allowed}.didomi-dropdown .didomi-dropdown-content{cursor:pointer;outline:none;background-color:transparent;border:none;display:inline-flex;align-items:center;justify-content:center;padding:16px;color:#ffffff;font-family:\\\"IBM Plex Sans\\\", \\\"IBMPlexSans-SemiBold\\\";font-size:16px;letter-spacing:0px;line-height:20px;font-weight:600}.didomi-dropdown .didomi-dropdown-content[data-opened] .didomi-dropdown-icon{transform:rotate(180deg)}.didomi-dropdown .didomi-dropdown-content:hover:not(:disabled){color:#ffd5c8}.didomi-dropdown .didomi-dropdown-content:disabled{cursor:not-allowed}.didomi-dropdown .didomi-dropdown-content .didomi-dropdown-icon{margin-left:16px;transition-duration:300ms;transition-property:transform}.didomi-overlay-container .didomi-dropdown-wrapper{min-width:240px}.didomi-overlay-container .didomi-dropdown-wrapper[data-popper-placement] .didomi-dropdown-list{transform:translateY(0) !important}.didomi-overlay-container .didomi-dropdown-wrapper .didomi-dropdown-list{transition-property:transform;display:block;box-shadow:0px 24px 24px 1px rgba(0, 0, 0, 0.12);padding:0;margin:0;background-color:#ffffff;border:1px solid #ffd5c8;border-radius:8px;transition-property:transform;transition-duration:300ms;overflow-y:auto;scrollbar-width:thin;scrollbar-color:#ffd5c8 #ffffff}.didomi-overlay-container .didomi-dropdown-wrapper .didomi-dropdown-list::-webkit-scrollbar{height:4px;width:4px;border-radius:8px}.didomi-overlay-container .didomi-dropdown-wrapper .didomi-dropdown-list::-webkit-scrollbar-track{background:#ffffff}.didomi-overlay-container .didomi-dropdown-wrapper .didomi-dropdown-list::-webkit-scrollbar-thumb{background-color:#ffd5c8;border-radius:4px;border:1px solid #ffffff}.didomi-overlay-container .didomi-dropdown-wrapper .didomi-dropdown-list.didomi-dropdown-scroll{border-top-right-radius:0;border-bottom-right-radius:0}.didomi-overlay-container .didomi-dropdown-wrapper-bordered .didomi-dropdown-list{background-color:#ffffff;border-color:#265973;scrollbar-width:thin;scrollbar-color:#265973 #ffffff}.didomi-overlay-container .didomi-dropdown-wrapper-bordered .didomi-dropdown-list::-webkit-scrollbar{height:4px;width:4px;border-radius:8px}.didomi-overlay-container .didomi-dropdown-wrapper-bordered .didomi-dropdown-list::-webkit-scrollbar-track{background:#ffffff}.didomi-overlay-container .didomi-dropdown-wrapper-bordered .didomi-dropdown-list::-webkit-scrollbar-thumb{background-color:#265973;border-radius:4px;border:1px solid #ffffff}.didomi-overlay-container .didomi-dropdown-wrapper-bordered .didomi-dropdown-list.didomi-dropdown-scroll .didomi-option{border-right:1px solid #265973}.didomi-overlay-container .didomi-dropdown-wrapper-bordered .didomi-dropdown-list .didomi-option{height:40px;border-left:none;border-right:none;transition:background-color 300ms ease-in-out}.didomi-overlay-container .didomi-dropdown-wrapper-bordered .didomi-dropdown-list .didomi-option .option-item{padding:0px 16px}.didomi-overlay-container .didomi-dropdown-wrapper-bordered .didomi-dropdown-list .didomi-option .option-item:not(.disabled){cursor:pointer}.didomi-overlay-container .didomi-dropdown-wrapper-bordered .didomi-dropdown-list .didomi-option .option-item:hover{background-color:#e2f1f8}.didomi-overlay-container .didomi-dropdown-wrapper-bordered .didomi-dropdown-list .didomi-option .option-item.selected,.didomi-overlay-container .didomi-dropdown-wrapper-bordered .didomi-dropdown-list .didomi-option .option-item:active{background-color:#e2f1f8}.didomi-overlay-container .didomi-dropdown-wrapper-blue .didomi-dropdown-list{scrollbar-width:thin;scrollbar-color:#265973 #ffffff;border:1px solid #9ebdcb}.didomi-overlay-container .didomi-dropdown-wrapper-blue .didomi-dropdown-list::-webkit-scrollbar{height:6px;width:6px;border-radius:8px}.didomi-overlay-container .didomi-dropdown-wrapper-blue .didomi-dropdown-list::-webkit-scrollbar-track{background:#ffffff}.didomi-overlay-container .didomi-dropdown-wrapper-blue .didomi-dropdown-list::-webkit-scrollbar-thumb{background-color:#265973;border-radius:6px;border:1px solid #ffffff}.didomi-overlay-container .didomi-dropdown-wrapper-blue .didomi-option .option-item:hover{background-color:#eff7fb}.didomi-overlay-container .didomi-dropdown-wrapper-blue .didomi-option .option-item.selected,.didomi-overlay-container .didomi-dropdown-wrapper-blue .didomi-option .option-item:active{background-color:#e2f1f8}\";\n\nconst OPTION_HEIGHT = 64;\nconst OPTION_VARIANT_HEIGHT = 40;\nconst DISTANCE_MAPPER = {\n  'xxxs': 4,\n  'xxs': 8,\n  'xs': 16,\n  's': 24,\n  'm': 32,\n  'l': 48,\n  'xl': 64,\n  '-xxxs': -4,\n  '-xxs': -8,\n  '-xs': -16,\n  '-s': -24,\n  '-m': -32,\n  '-l': -48,\n  '-xl': -64,\n  'none': 0,\n};\nlet DidomiDropdown = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.selectionChanged = createEvent(this, \"selectionChanged\", 7);\n    this.dropdownId = 'dropdown-' + generateUniqueId();\n    /**\n     * The button selection id\n     */\n    this.buttonId = 'dropdown-btn-' + generateUniqueId();\n    /**\n     * The overlay position, fixed vs absolute. Use absolute if you want the dropdown to be contained within a parent.\n     */\n    this.position = 'fixed';\n    /**\n     * The dropdown style variant.\n     */\n    this.variant = 'standard';\n    /**\n     * The distance to the element\n     * Possible values: `xxxs`, `xxs`, `xs`(default), `none`\n     */\n    this.distance = 'xs';\n    /**\n     * The horizontal distance to the element\n     * You can add a negative value to offset to the opposite direction\n     * Possible values: `xxxs`, `xxs`, `xs`(default), `m`, `l`, `xl`, `none`\n     */\n    this.distanceX = 'xs';\n    /**\n     * If the dropdown is disabled\n     */\n    this.disabled = false;\n    /**\n     * The number of visible items before scrolling (default = 4).\n     */\n    this.maxVisibleItems = 4;\n    /**\n     * Returns the LI list of dropdown items\n     */\n    this.getDropdownItems = () => {\n      this.didomiLIItems = Array.from(document.querySelectorAll(`#${this.dropdownId} .didomi-option`));\n    };\n    /**\n     * Opens or closes the dropdown depending on the current dropdown state\n     */\n    this.toggleDropdown = async () => {\n      if (this.popperOverlay.isOpen()) {\n        this.closeDropdown();\n      }\n      else {\n        this.openDropdown();\n      }\n    };\n    this.closeDropdown = () => {\n      this.popperOverlay.close();\n    };\n    this.closeCleanUp = () => {\n      var _a;\n      this.didomiLIItems.forEach(li => {\n        li.querySelector('li').setAttribute('tabindex', '-1');\n        li.removeEventListener('clickEl', this.handleItemSelect);\n      });\n      (_a = this.target) === null || _a === void 0 ? void 0 : _a.removeAttribute('data-opened');\n    };\n    this.openDropdown = () => {\n      this.popperOverlay.open();\n    };\n    this.openSetUp = () => {\n      this.didomiLIItems.forEach(li => {\n        li.querySelector('li').setAttribute('tabindex', '0');\n        li.addEventListener('clickEl', this.handleItemSelect);\n      });\n      this.target.setAttribute('data-opened', '');\n    };\n    this.cleanUpSelection = () => {\n      this.didomiLIItems.forEach(dI => dI === null || dI === void 0 ? void 0 : dI.removeAttribute('item-selected'));\n    };\n    this.handleItemSelect = (e) => {\n      this.closeDropdown();\n      const target = e.target;\n      this.selectionChanged.emit({\n        name: target.getAttribute('item-text'),\n        value: target.getAttribute('item-value'),\n      });\n    };\n    this.closeTargetFromOutsideOnClick = async (e) => {\n      var _a, _b;\n      if (e.target !== this.target && !((_a = this.el) === null || _a === void 0 ? void 0 : _a.contains(e.target)) && !((_b = this.target) === null || _b === void 0 ? void 0 : _b.contains(e.target))) {\n        await this.closeDropdown();\n      }\n    };\n    /**\n     * Handles keyboard navigation for the list items\n     * @param e The keyboard navigation event\n     */\n    this.handleKeyDown = (e) => {\n      e.preventDefault(); // Stop browser from handling default events\n      const itemTarget = e.target;\n      this.getDropdownItems();\n      if (!itemTarget)\n        return;\n      const navigatableItems = this.didomiLIItems.filter(dI => !dI.hasAttribute('item-disabled')).map(dI => dI.querySelector('li'));\n      const focusedLiItemIndex = navigatableItems.findIndex(li => li === itemTarget);\n      if (e.ctrlKey || e.altKey || e.metaKey) {\n        return;\n      }\n      else {\n        switch (e.code) {\n          case 'Tab':\n          case 'Escape':\n            this.closeDropdown();\n            break;\n          case 'Space':\n          case 'Enter':\n            navigatableItems[focusedLiItemIndex].click();\n            break;\n          case 'Up':\n          case 'ArrowUp':\n          case 'ArrowLeft':\n            if (focusedLiItemIndex <= 0) {\n              navigatableItems[navigatableItems.length - 1].focus();\n            }\n            else {\n              navigatableItems[focusedLiItemIndex - 1].focus();\n            }\n            break;\n          case 'Down':\n          case 'ArrowDown':\n          case 'ArrowRight':\n            if (focusedLiItemIndex >= navigatableItems.length - 1) {\n              navigatableItems[0].focus();\n            }\n            else {\n              navigatableItems[focusedLiItemIndex + 1].focus();\n            }\n            break;\n          case 'Home':\n          case 'PageUp':\n            navigatableItems[0].focus();\n            break;\n          case 'End':\n          case 'PageDown':\n            navigatableItems[navigatableItems.length - 1].focus();\n            break;\n        }\n      }\n    };\n    this.assignButtonRef = ref => {\n      if (!this.targetEl) {\n        this.targetEl = ref;\n      }\n    };\n  }\n  updatedSelectedValue(newSelectedValue) {\n    if (newSelectedValue) {\n      this.cleanUpSelection();\n      const selectedListItem = this.didomiLIItems.find(li => li.getAttribute('item-text') === newSelectedValue);\n      if (selectedListItem) {\n        selectedListItem.setAttribute('item-selected', '');\n      }\n    }\n  }\n  componentDidRender() {\n    var _a;\n    this.hasScroll = this.maxVisibleItems < ((_a = this.didomiLIItems) === null || _a === void 0 ? void 0 : _a.length);\n  }\n  get target() {\n    if (this.for) {\n      return document.getElementById(this.for);\n    }\n    return this.targetEl;\n  }\n  get offsetSize() {\n    return DISTANCE_MAPPER[this.distance] || DISTANCE_MAPPER.xxs;\n  }\n  get horizontalOffsetSize() {\n    return DISTANCE_MAPPER[this.distanceX] || 0;\n  }\n  async componentDidLoad() {\n    this.getDropdownItems();\n    this.cleanUpSelection();\n    if (this.for) {\n      const targetEl = document.getElementById(this.for);\n      if (targetEl) {\n        this.target.addEventListener('click', this.toggleDropdown);\n      }\n    }\n    this.popperOverlay = new PopperOverlay(this.target, this.dropdownRef, this.attachTo, {\n      onOpen: this.openSetUp,\n      onClickOutside: e => this.closeTargetFromOutsideOnClick(e),\n      onKeyDown: e => this.handleKeyDown(e),\n      onClose: this.closeCleanUp,\n      placement: this.variant === 'bordered' ? 'bottom' : 'bottom-end',\n      strategy: this.position,\n      modifiers: [\n        // Prevents the dropdown floating element from overflowing the boundary element, in combination with flip\n        // if the element has no more space in the bottom it will render the dropdown up\n        preventOverflow,\n        {\n          name: 'preventOverflow',\n          options: {\n            boundary: document.getElementById(this.boundaryElementId) || document.body,\n          },\n        },\n        flip,\n        {\n          name: 'flip',\n          options: {\n            boundary: document.getElementById(this.boundaryElementId) || document.body,\n            allowedAutoPlacements: ['top'],\n          },\n        },\n        offset,\n        {\n          name: 'offset',\n          options: {\n            offset: [this.horizontalOffsetSize, this.offsetSize],\n          },\n        },\n      ],\n    });\n    if (this.selectedValue) {\n      const selectedListItem = this.didomiLIItems.find(li => li.getAttribute('item-text') === this.selectedValue);\n      if (selectedListItem) {\n        selectedListItem.setAttribute('item-selected', '');\n      }\n    }\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this.popperOverlay) === null || _a === void 0 ? void 0 : _a.destroy();\n    if (this.for) {\n      const targetEl = document.getElementById(this.for);\n      if (targetEl) {\n        targetEl.removeEventListener('click', this.toggleDropdown);\n      }\n    }\n  }\n  /**\n   * Returns true if the dropdown is opened\n   */\n  async isOpen() {\n    return this.popperOverlay.isOpen();\n  }\n  /**\n   * Opens the dropdown popup\n   */\n  async open() {\n    this.openDropdown();\n  }\n  /**\n   * Closes the dropdown popup\n   */\n  async close() {\n    this.closeDropdown();\n  }\n  render() {\n    const maxHeight = `${this.maxVisibleItems * (this.variant === 'bordered' ? OPTION_VARIANT_HEIGHT : OPTION_HEIGHT)}px`;\n    const DidomiIcon = createComponentWithPrefix('didomi-icon', this.el.tagName);\n    return (h(Host, { class: {\n        'didomi-dropdown': true,\n        'didomi-dropdown-bordered': this.variant === 'bordered',\n        'didomi-dropdown-blue': this.variant === 'blue',\n        'didomi-dropdown-disabled': this.disabled,\n      } }, h(\"input\", { class: \"select-input\", value: this.selectedValue }), !this.for && (h(\"button\", { id: this.buttonId, disabled: this.disabled, ref: this.assignButtonRef, class: \"didomi-dropdown-content\", onClick: this.toggleDropdown }, this.selectedValue || 'Select a value', h(DidomiIcon, { class: \"didomi-dropdown-icon\", name: \"down-on\" }))), h(\"div\", { class: { 'didomi-dropdown-wrapper': true, 'didomi-dropdown-wrapper-bordered': this.variant === 'bordered', 'didomi-dropdown-wrapper-blue': this.variant === 'blue' }, id: this.dropdownId, ref: ref => (this.dropdownRef = ref) }, h(\"ul\", { class: { 'didomi-dropdown-list': true, 'didomi-dropdown-scroll': this.hasScroll }, role: \"list\", style: { 'max-height': maxHeight, 'transform': `${`translateY(-${this.offsetSize}px)`}` } }, h(\"slot\", null)))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"selectedValue\": [\"updatedSelectedValue\"]\n  }; }\n};\nDidomiDropdown.style = didomiDropdownCss;\n\nexport { DidomiDropdown as didomi_dropdown };\n"],"names":["DISTANCE_MAPPER","DidomiDropdown","hostRef","_this","_classCallCheck","registerInstance","this","selectionChanged","createEvent","dropdownId","generateUniqueId","buttonId","position","variant","distance","distanceX","disabled","maxVisibleItems","getDropdownItems","didomiLIItems","Array","from","document","querySelectorAll","concat","toggleDropdown","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","popperOverlay","isOpen","closeDropdown","openDropdown","stop","close","closeCleanUp","_a","forEach","li","querySelector","setAttribute","removeEventListener","handleItemSelect","target","removeAttribute","open","openSetUp","addEventListener","cleanUpSelection","dI","e","emit","name","getAttribute","value","closeTargetFromOutsideOnClick","_ref2","_callee2","_b","_context2","el","contains","_x","apply","arguments","handleKeyDown","preventDefault","itemTarget","navigatableItems","filter","hasAttribute","map","focusedLiItemIndex","findIndex","ctrlKey","altKey","metaKey","code","click","length","focus","assignButtonRef","ref","targetEl","_createClass","key","newSelectedValue","selectedListItem","find","hasScroll","get","for","getElementById","xxs","_componentDidLoad","_callee3","_this2","_context3","PopperOverlay","dropdownRef","attachTo","onOpen","onClickOutside","onKeyDown","onClose","placement","strategy","modifiers","preventOverflow","options","boundary","boundaryElementId","body","flip","allowedAutoPlacements","offset","horizontalOffsetSize","offsetSize","selectedValue","destroy","_isOpen","_callee4","_context4","abrupt","_open","_callee5","_context5","_close","_callee6","_context6","_this3","maxHeight","DidomiIcon","createComponentWithPrefix","tagName","h","Host","class","id","onClick","role","style","getElement"],"sourceRoot":""}