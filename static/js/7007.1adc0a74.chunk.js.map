{"version":3,"file":"static/js/7007.1adc0a74.chunk.js","mappings":"kNAIIA,EAAc,WAChB,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,GAIvBG,KAAKC,WAAY,EAKjBD,KAAKE,QAAU,MACjB,CAQC,OARAC,EAAAA,EAAAA,GAAAP,EAAA,EAAAQ,IAAA,SAAAC,MACD,WACE,IAAMC,EAAc,CAClB,mBAAmB,EACnB,+BAAiD,SAAjBN,KAAKE,SAAsBF,KAAKC,UAChE,iCAAmD,WAAjBD,KAAKE,SAAwBF,KAAKC,WAEtE,OAAQM,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAOH,IAAeC,EAAAA,EAAAA,GAAE,OAAQ,MACpD,KAACX,CAAA,CApBe,GAsBlBA,EAAec,MAxBW,w6B","sources":["../node_modules/@didomi/ui-atoms/dist/esm/didomi-skeleton.entry.js"],"sourcesContent":["import { r as registerInstance, h, a as Host } from './index-371c2d7e.js';\n\nconst didomiSkeletonCss = \".didomi-skeleton-unit-loading,.didomi-skeleton-layout-loading [data-skeleton]{display:inline-block;position:relative;overflow:hidden;pointer-events:none}.didomi-skeleton-unit-loading:before,.didomi-skeleton-layout-loading [data-skeleton]:before,.didomi-skeleton-unit-loading:after,.didomi-skeleton-layout-loading [data-skeleton]:after{border-radius:4px;content:\\\"\\\";inset:0;position:absolute}.didomi-skeleton-unit-loading:before,.didomi-skeleton-layout-loading [data-skeleton]:before{background:linear-gradient(314.69deg, #eff7fb 0%, #f9fafa 100%)}.didomi-skeleton-unit-loading:after,.didomi-skeleton-layout-loading [data-skeleton]:after{animation:left-to-right-animation 2s linear infinite;filter:blur(15px);border-left:20px solid #ffffff}.didomi-skeleton-unit-loading>*,.didomi-skeleton-layout-loading [data-skeleton]>*{visibility:hidden}@keyframes left-to-right-animation{from{transform:translateX(0%)}to{transform:translateX(100%)}}\";\n\nlet DidomiSkeleton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Flag that indicates whether skeleton should be shown\n     */\n    this.isLoading = false;\n    /**\n     * Whether skeleton should cover single unit or whole nested layout.\n     * For `layout` variant: each child item with `data-skeleton` attribute will be covered during loading.\n     */\n    this.variant = 'unit';\n  }\n  render() {\n    const hostClasses = {\n      'didomi-skeleton': true,\n      'didomi-skeleton-unit-loading': this.variant === 'unit' && this.isLoading,\n      'didomi-skeleton-layout-loading': this.variant === 'layout' && this.isLoading,\n    };\n    return (h(Host, { class: hostClasses }, h(\"slot\", null)));\n  }\n};\nDidomiSkeleton.style = didomiSkeletonCss;\n\nexport { DidomiSkeleton as didomi_skeleton };\n"],"names":["DidomiSkeleton","hostRef","_classCallCheck","registerInstance","this","isLoading","variant","_createClass","key","value","hostClasses","h","Host","class","style"],"sourceRoot":""}