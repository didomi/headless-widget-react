{"version":3,"file":"static/js/4934.3d4a72d5.chunk.js","mappings":"wNAIIA,EAAmB,WACrB,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,EACzB,CA0DqC,OA1DpCI,EAAAA,EAAAA,GAAAL,EAAA,EAAAM,IAAA,qBAAAC,MACD,SAAmBC,GACjB,OAAsB,IAAlBA,EACK,YAEAA,EAAgB,GAChB,cAEAA,EAAgB,GAChB,SAEAA,EAAgB,GAChB,OAEAA,EAAgB,GAChB,OAEAA,EAAgB,EAChB,iBADJ,CAGP,GAAC,CAAAF,IAAA,mBAAAC,MACD,WACE,IAAIE,EAAQ,EACZ,IAAKL,KAAKM,SACR,OAAOD,EAIT,IADA,IAAIE,EAAU,CAAC,EACNC,EAAI,EAAGA,EAAIR,KAAKM,SAASG,OAAQD,IACxCD,EAAQP,KAAKM,SAASE,KAAOD,EAAQP,KAAKM,SAASE,KAAO,GAAK,EAC/DH,GAAS,EAAIE,EAAQP,KAAKM,SAASE,IAGrC,IAAIE,EAAa,CACfC,OAAQ,KAAKC,KAAKZ,KAAKM,UACvBO,MAAO,QAAQD,KAAKZ,KAAKM,UACzBQ,MAAO,QAAQF,KAAKZ,KAAKM,UACzBS,SAAU,KAAKH,KAAKZ,KAAKM,WAEvBU,EAAiB,EACrB,IAAK,IAAIC,KAASP,EAChBM,IAAwC,IAAtBN,EAAWO,GAAkB,EAAI,EAGrD,OADAZ,GAAgC,IAAtBW,EAAiB,GACpBE,KAAKC,MAAMd,EACpB,GAAC,CAAAH,IAAA,SAAAC,MACD,WACE,IAAMiB,EAAkBpB,KAAKqB,mBAAmBrB,KAAKsB,oBAC/CC,EAAmB,CACvB,yBAAyB,EACzB,kCAAuD,cAApBH,EACnC,6BAAkD,SAApBA,EAC9B,6BAAkD,SAApBA,EAC9B,+BAAoD,WAApBA,EAChC,oCAAyD,gBAApBA,GAEvC,OAAQI,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,MAAMD,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAOH,IAAoBC,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,kCAAmCF,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,iCAAmCN,IAAkBI,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,oCAAqCF,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,MAAO,gCAAiCF,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,MAAO,gCAAiCF,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,MAAO,gCAAiCF,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,MAAO,gCAAiCF,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,MAAO,kCACpd,GAAC,CAAAxB,IAAA,KAAAyB,IACD,WAAW,OAAOC,EAAAA,EAAAA,GAAW5B,KAAO,KAACJ,CAAA,CA7DhB,GA+DvBA,EAAoBiC,MAjEW,knC","sources":["../node_modules/@didomi/ui-atoms/dist/esm/didomi-password-meter.entry.js"],"sourcesContent":["import { r as registerInstance, h, a as Host, g as getElement } from './index-371c2d7e.js';\n\nconst didomiPasswordMeterCss = \".didomi-password-meter{display:flex;width:100%}.didomi-password-meter .didomi-password-meter-content{flex:1;display:flex;align-items:center;justify-content:space-between}.didomi-password-meter .didomi-password-meter-message{color:#265973;font-family:\\\"IBM Plex Sans\\\", \\\"IBMPlexSans\\\";font-style:normal;font-size:12px;letter-spacing:0px;line-height:18px;font-weight:400}.didomi-password-meter .didomi-password-meter-indicator{display:flex}.didomi-password-meter .didomi-password-meter-tick{width:35px;height:4px;margin-left:4px;background:#c9dfe8;border-radius:2px}.didomi-password-meter.didomi-password-meter-very-weak .didomi-password-meter-tick:first-child{background:#ea4335}.didomi-password-meter.didomi-password-meter-weak .didomi-password-meter-tick:nth-child(-n+2){background:#ea4335}.didomi-password-meter.didomi-password-meter-good .didomi-password-meter-tick:nth-child(-n+3){background:#ebae12}.didomi-password-meter.didomi-password-meter-strong .didomi-password-meter-tick:nth-child(-n+4){background:#10c767}.didomi-password-meter.didomi-password-meter-very-strong .didomi-password-meter-tick:nth-child(-n+5){background:#10c767}\";\n\nlet DidomiPasswordMeter = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  getPasswordMessage(passwordScore) {\n    if (passwordScore === 0) {\n      return 'Too Short';\n    }\n    else if (passwordScore > 80) {\n      return 'Very Strong';\n    }\n    else if (passwordScore > 60) {\n      return 'Strong';\n    }\n    else if (passwordScore > 40) {\n      return 'Good';\n    }\n    else if (passwordScore > 20) {\n      return 'Weak';\n    }\n    else if (passwordScore > 0) {\n      return 'Very Weak';\n    }\n  }\n  getPasswordScore() {\n    let score = 0;\n    if (!this.password) {\n      return score;\n    }\n    // award every unique letter until 5 repetitions\n    let letters = {};\n    for (let i = 0; i < this.password.length; i++) {\n      letters[this.password[i]] = (letters[this.password[i]] || 0) + 1;\n      score += 5 / letters[this.password[i]];\n    }\n    // bonus points for mixing it up\n    let variations = {\n      digits: /\\d/.test(this.password),\n      lower: /[a-z]/.test(this.password),\n      upper: /[A-Z]/.test(this.password),\n      nonWords: /\\W/.test(this.password),\n    };\n    let variationCount = 0;\n    for (let check in variations) {\n      variationCount += variations[check] === true ? 1 : 0;\n    }\n    score += (variationCount - 1) * 10;\n    return Math.floor(score);\n  }\n  render() {\n    const passwordMessage = this.getPasswordMessage(this.getPasswordScore());\n    const classDidomiMeter = {\n      'didomi-password-meter': true,\n      'didomi-password-meter-very-weak': passwordMessage === 'Very Weak',\n      'didomi-password-meter-weak': passwordMessage === 'Weak',\n      'didomi-password-meter-good': passwordMessage === 'Good',\n      'didomi-password-meter-strong': passwordMessage === 'Strong',\n      'didomi-password-meter-very-strong': passwordMessage === 'Very Strong',\n    };\n    return (h(Host, null, h(\"div\", { class: classDidomiMeter }, h(\"div\", { class: \"didomi-password-meter-content\" }, h(\"div\", { class: \"didomi-password-meter-message\" }, passwordMessage), h(\"div\", { class: \"didomi-password-meter-indicator\" }, h(\"span\", { class: \"didomi-password-meter-tick\" }), h(\"span\", { class: \"didomi-password-meter-tick\" }), h(\"span\", { class: \"didomi-password-meter-tick\" }), h(\"span\", { class: \"didomi-password-meter-tick\" }), h(\"span\", { class: \"didomi-password-meter-tick\" }))))));\n  }\n  get el() { return getElement(this); }\n};\nDidomiPasswordMeter.style = didomiPasswordMeterCss;\n\nexport { DidomiPasswordMeter as didomi_password_meter };\n"],"names":["DidomiPasswordMeter","hostRef","_classCallCheck","registerInstance","this","_createClass","key","value","passwordScore","score","password","letters","i","length","variations","digits","test","lower","upper","nonWords","variationCount","check","Math","floor","passwordMessage","getPasswordMessage","getPasswordScore","classDidomiMeter","h","Host","class","get","getElement","style"],"sourceRoot":""}