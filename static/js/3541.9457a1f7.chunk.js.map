{"version":3,"file":"static/js/3541.9457a1f7.chunk.js","mappings":"8NAIIA,EAAwB,WAC1B,SAAAA,EAAYC,GAAS,IAAAC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAH,IACnBI,EAAAA,EAAAA,GAAiBC,KAAMJ,GACvBI,KAAKC,eAAgBC,EAAAA,EAAAA,GAAYF,KAAM,gBAAiB,GAIxDA,KAAKG,UAAW,EAIhBH,KAAKI,UAAW,EAChBJ,KAAKK,oBAAsB,WACzBR,EAAKI,cAAcK,KAAKT,EAAKU,MAC/B,CACF,CAGC,OAHAC,EAAAA,EAAAA,GAAAb,EAAA,EAAAc,IAAA,SAAAF,MACD,WACE,OAAQG,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAO,gCAAiCF,EAAAA,EAAAA,GAAE,SAAU,CAAEG,KAAM,SAAUD,MAAO,kCAAmCR,SAAUJ,KAAKI,SAAU,gBAAiBJ,KAAKG,SAAUW,QAASd,KAAKK,sBAAuBK,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,MAAO,qCAAsCF,EAAAA,EAAAA,GAAE,OAAQ,QACrS,KAACf,CAAA,CAlByB,GAoB5BA,EAAyBoB,MAtBW,0/B","sources":["../node_modules/@didomi/ui-atoms/dist/esm/didomi-toggle-button-option.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, a as Host } from './index-371c2d7e.js';\n\nconst didomiToggleButtonOptionCss = \".didomi-toggle-button-option-btn{height:30px;background-color:transparent;border-radius:var(--_toggle-br);border:none;color:#959595;cursor:pointer;display:block;padding:4px 14px;position:relative;transition:color 400ms;font-family:\\\"IBM Plex Sans\\\", \\\"IBMPlexSans-SemiBold\\\";font-weight:600;font-size:10px;line-height:16px;letter-spacing:0px}.didomi-toggle-button-option-btn:focus{outline:none}.didomi-toggle-button-option-btn:focus-visible{box-shadow:0 0 0 3px #84d1eb}.didomi-toggle-button-option-btn:disabled{cursor:not-allowed}.didomi-toggle-button-option-btn:before{background-color:#ffffff;border-radius:var(--_toggle-br);box-sizing:border-box;border:1px solid #c9dfe8;content:\\\"\\\";inset:-1px;position:absolute;transform:scale(0);transition:transform 400ms}.didomi-toggle-button-option-btn[data-selected]{color:#1d4153;cursor:default}.didomi-toggle-button-option-btn[data-selected]::before{transform:scale(1)}.didomi-toggle-button-option-text{position:relative;display:flex;justify-content:center;align-items:center}\";\n\nlet DidomiToggleButtonOption = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.optionClicked = createEvent(this, \"optionClicked\", 7);\n    /**\n     * Whether the option is selected. Is passed from parent component(toggle-button)\n     */\n    this.selected = false;\n    /**\n     * Whether the option is disabled. Is passed from parent component(toggle-button)\n     */\n    this.disabled = false;\n    this.handleButtonClicked = () => {\n      this.optionClicked.emit(this.value);\n    };\n  }\n  render() {\n    return (h(Host, { class: \"didomi-toggle-button-option\" }, h(\"button\", { type: \"button\", class: \"didomi-toggle-button-option-btn\", disabled: this.disabled, \"data-selected\": this.selected, onClick: this.handleButtonClicked }, h(\"span\", { class: \"didomi-toggle-button-option-text\" }, h(\"slot\", null)))));\n  }\n};\nDidomiToggleButtonOption.style = didomiToggleButtonOptionCss;\n\nexport { DidomiToggleButtonOption as didomi_toggle_button_option };\n"],"names":["DidomiToggleButtonOption","hostRef","_this","_classCallCheck","registerInstance","this","optionClicked","createEvent","selected","disabled","handleButtonClicked","emit","value","_createClass","key","h","Host","class","type","onClick","style"],"sourceRoot":""}