{"version":3,"file":"static/js/7740.a08d1f89.chunk.js","mappings":"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","sources":["../node_modules/@didomi/ui-atoms/dist/esm/didomi-collapsible-tabs.entry.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-371c2d7e.js';\n\nconst didomiCollapsibleTabsCss = \".didomi-collapsible-tabs{display:block;position:relative}@media (min-width: 960px){.didomi-collapsible-tabs{height:auto !important}}\";\n\nconst MOBILE_TAB_HEADER_HEIGHT = 67;\nconst MOBILE_TAB_HEADER_PADDING = 16;\nlet DidomiCollapsibleTabs = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.activeTabChange = createEvent(this, \"activeTabChange\", 7);\n    this.tabToggleChange = createEvent(this, \"tabToggleChange\", 7);\n    /**\n     * If true it expands the tab panels, if false it collapses it.\n     * You can modify the expansion of the panel by updating this property.\n     * The property will reflect any change if a user interacts with the component and collapses/expand the panel.\n     */\n    this.expanded = true;\n    /**\n     * Activates the tab at the given index.\n     */\n    this.activeTab = 0;\n    /**\n     * Gets the tabs heading element\n     */\n    this.getTabHeading = () => {\n      return this.el.querySelector('.didomi-collapsible-tab-heading');\n    };\n    /**\n     * Gets the tabs panel container element\n     */\n    this.getTabPanelsWrapper = () => {\n      return this.el.querySelector('.didomi-collapsible-tab-panels');\n    };\n    /**\n     * Gets all the tabs headers\n     */\n    this.getTabHeaders = () => {\n      if (!this.heading)\n        return null;\n      return Array.from(this.heading.querySelectorAll('.didomi-collapsible-tab-header'));\n    };\n    /**\n     * Gets all the tabs panels\n     */\n    this.getTabPanels = () => {\n      if (!this.panels)\n        return null;\n      return Array.from(this.panels.querySelectorAll('.didomi-collapsible-tab-panel'));\n    };\n    /**\n     * Shows the active tab and hide all the other tabs, updates both the header and the panel\n     * of the corresponding active tab\n     * @param {number} activeIndex Index of the tab to activate\n     */\n    this.updatePanelsAndHeaders = async (activeIndex) => {\n      await this.updateTabHeaders(activeIndex);\n      await this.updateTabPanels(activeIndex);\n    };\n    /**\n     * Makes the necessary changes in the tab header to display the corresponding active tab\n     * @param {number} activeIndex Index of the tab to activate\n     */\n    this.updateTabHeaders = async (activeIndex) => {\n      const tabHeaders = this.getTabHeaders();\n      for (const [i, tabHeader] of tabHeaders.entries()) {\n        const headersTop = i >= 1 ? i * MOBILE_TAB_HEADER_HEIGHT + i * MOBILE_TAB_HEADER_PADDING : 0;\n        if (i === activeIndex) {\n          await tabHeader.setActive();\n          if (this.expanded) {\n            await tabHeader.toggleExpanded(true);\n          }\n          tabHeader.style.paddingTop = `${headersTop}px`;\n        }\n        else {\n          // We calculate the position for the mobile view, this will not affect the desktop view\n          const panelsTop = i >= activeIndex && this.expanded ? this.panels.scrollHeight : 0;\n          tabHeader.style.top = `${headersTop + panelsTop}px`;\n          tabHeader.style.paddingTop = `0px`;\n          await tabHeader.setInactive();\n          await tabHeader.toggleExpanded(false);\n        }\n      }\n    };\n    /**\n     * Makes the necessary changes in the tab panels to display the corresponding active tab\n     * @param {number} activeIndex Index of the tab to activate\n     */\n    this.updateTabPanels = async (activeIndex) => {\n      const tabPanels = this.getTabPanels();\n      for (const [i, panel] of tabPanels.entries()) {\n        if (i === activeIndex) {\n          await panel.show();\n        }\n        else {\n          await panel.hide(i < activeIndex ? 'left' : 'right');\n        }\n      }\n    };\n    /**\n     * Starts the process of activating a new tab (if the tab clicked is not the currently active)\n     * Emits the active tab change event to notify the active tab has changed\n     * @param {number} activeIndex Index of the tab to activate\n     */\n    this.updateActiveTab = async (activeIndex) => {\n      if (this.activeTab !== activeIndex) {\n        this.expanded = true;\n        this.activeTab = activeIndex;\n        this.tabToggleChange.emit(true);\n        this.activeTabChange.emit(activeIndex);\n      }\n      else {\n        this.expanded = !this.expanded;\n        this.tabToggleChange.emit(this.expanded);\n        await this.updatePanelsAndHeaders(activeIndex);\n      }\n    };\n    /**\n     * Expands or collapses the panel view\n     * @param {boolean} expand true to expand the panel, false to collapse\n     */\n    this.togglePanelView = (expand) => {\n      if (expand) {\n        this.panels.classList.remove('didomi-collapsible-tab-panels-collapsed');\n      }\n      else {\n        this.panels.classList.add('didomi-collapsible-tab-panels-collapsed');\n      }\n    };\n    /**\n     * Sets up the component shadow dom by attaching the headers and panels containers\n     * If either the header or the panel container is not present it throws an error\n     */\n    this.setupDefaultComponents = async () => {\n      this.heading = this.getTabHeading();\n      if (!this.heading) {\n        throw new Error('Tabs element must contain a valid <didomi-collapsible-tab-heading> element');\n      }\n      this.heading.addEventListener('keydown', this.handleKeyDown);\n      this.panels = this.getTabPanelsWrapper();\n      if (!this.panels) {\n        throw new Error('Tabs element must contain a valid <tab-panels> element');\n      }\n      this.el.append(this.heading, this.panels);\n    };\n    /**\n     * Updates the panel tab header height\n     */\n    this.handleTabPanelChange = async () => {\n      const tabHeaders = this.getTabHeaders();\n      // We calculate and set the full height of the element for mobile view, so that the elements can float inside\n      // This does not affect the desktop view\n      if (tabHeaders && tabHeaders.length) {\n        const amountOfTabs = tabHeaders.length;\n        const extraSpace = MOBILE_TAB_HEADER_HEIGHT * amountOfTabs + MOBILE_TAB_HEADER_PADDING * (amountOfTabs - 1);\n        this.el.style.height = `${this.expanded ? this.panels.scrollHeight + extraSpace : extraSpace}px`;\n      }\n      await this.updateTabHeaders(this.activeTab);\n    };\n    /**\n     * Listens to any change in the tab panel to re-calculate the height\n     */\n    this.listenForChildrenChange = () => {\n      this.panelMutationObserver = new MutationObserver(this.handleTabPanelChange);\n      this.panelMutationObserver.observe(this.panels, { childList: true, subtree: true, attributes: true });\n    };\n    /**\n     * Handles keyboard navigation for the list items\n     * @param e The keyboard navigation event\n     */\n    this.handleKeyDown = async (e) => {\n      const itemTarget = e.target;\n      if (e.key !== 'Tab') {\n        e.preventDefault();\n      }\n      if (!itemTarget)\n        return;\n      const tabHeaders = this.getTabHeaders();\n      const focusedTabHeaderItemIndex = tabHeaders.findIndex(tH => tH === itemTarget.parentElement);\n      if (e.ctrlKey || e.altKey || e.metaKey || e.key === 'Tab') {\n        return;\n      }\n      else {\n        switch (e.code) {\n          case 'Escape':\n            tabHeaders[focusedTabHeaderItemIndex].tabBlur();\n            break;\n          case 'Up':\n          case 'ArrowUp':\n          case 'ArrowLeft':\n            if (focusedTabHeaderItemIndex === 0) {\n              tabHeaders[tabHeaders.length - 1].tabFocus();\n            }\n            else {\n              tabHeaders[focusedTabHeaderItemIndex - 1].tabFocus();\n            }\n            break;\n          case 'Down':\n          case 'ArrowDown':\n          case 'ArrowRight':\n            if (focusedTabHeaderItemIndex === tabHeaders.length - 1) {\n              tabHeaders[0].tabFocus();\n            }\n            else {\n              tabHeaders[focusedTabHeaderItemIndex + 1].tabFocus();\n            }\n            break;\n          case 'Home':\n          case 'PageUp':\n            tabHeaders[0].tabFocus();\n            break;\n          case 'End':\n          case 'PageDown':\n            tabHeaders[tabHeaders.length - 1].tabFocus();\n            break;\n        }\n      }\n    };\n  }\n  expandedChanged(expanded) {\n    this.togglePanelView(expanded);\n  }\n  async activeTabChangedWatcher(newTabIndex) {\n    await this.updatePanelsAndHeaders(newTabIndex);\n  }\n  async componentDidLoad() {\n    this.setupDefaultComponents();\n    const tabHeaders = this.getTabHeaders();\n    for (const [i, header] of tabHeaders.entries()) {\n      header.addEventListener('tabSelected', async () => await this.updateActiveTab(i));\n    }\n    await this.updatePanelsAndHeaders(this.activeTab);\n    this.togglePanelView(this.expanded);\n    this.listenForChildrenChange();\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this.panelMutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n  }\n  render() {\n    return (h(Host, { class: \"didomi-collapsible-tabs\", role: \"tablist\" }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"expanded\": [\"expandedChanged\"],\n    \"activeTab\": [\"activeTabChangedWatcher\"]\n  }; }\n};\nDidomiCollapsibleTabs.style = didomiCollapsibleTabsCss;\n\nexport { DidomiCollapsibleTabs as didomi_collapsible_tabs };\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["DidomiCollapsibleTabs","hostRef","_this","_classCallCheck","registerInstance","this","activeTabChange","createEvent","tabToggleChange","expanded","activeTab","getTabHeading","el","querySelector","getTabPanelsWrapper","getTabHeaders","heading","Array","from","querySelectorAll","getTabPanels","panels","updatePanelsAndHeaders","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","activeIndex","wrap","_context","prev","next","updateTabHeaders","updateTabPanels","stop","_x","apply","arguments","_ref2","_callee2","tabHeaders","_iterator","_step","_step$value","i","tabHeader","headersTop","panelsTop","_context2","_createForOfIteratorHelper","entries","s","n","done","_slicedToArray","value","setActive","toggleExpanded","style","paddingTop","concat","scrollHeight","top","setInactive","t0","e","f","finish","_x2","_ref3","_callee3","tabPanels","_iterator2","_step2","_step2$value","panel","_context3","show","hide","_x3","updateActiveTab","_ref4","_callee4","_context4","emit","_x4","togglePanelView","expand","classList","remove","add","setupDefaultComponents","_callee5","_context5","Error","addEventListener","handleKeyDown","append","handleTabPanelChange","_callee6","amountOfTabs","extraSpace","_context6","length","height","listenForChildrenChange","panelMutationObserver","MutationObserver","observe","childList","subtree","attributes","_ref7","_callee7","itemTarget","focusedTabHeaderItemIndex","_context7","target","key","preventDefault","abrupt","findIndex","tH","parentElement","ctrlKey","altKey","metaKey","code","tabBlur","tabFocus","_x5","_createClass","_activeTabChangedWatcher","_callee8","newTabIndex","_context8","_x6","_componentDidLoad","_callee10","_iterator3","_step3","_loop","_this2","_context11","_step3$value","_context10","_callee9","_context9","sent","delegateYield","t1","_a","disconnect","h","Host","class","role","get","getElement","o","allowArrayLike","it","Symbol","iterator","isArray","F","_e","TypeError","err","normalCompletion","didErr","call","step","_e2"],"sourceRoot":""}